{"ast":null,"code":"var _jsxFileName = \"/Users/jingjing/NEU_Align_CS/CS5610 Web Dev/Jingjing-Liao-project2/jingjing-liao-project2 Redux/src/FreePlayBoard.jsx\",\n    _s = $RefreshSig$();\n\nimport ComputerSquare from \"./ComputerSquare\";\nimport \"./Board.css\";\nimport { useState } from \"react\"; // let computerBoard = randomlyChooseFiveShips([\n//   [\"\", \"\", \"\"],\n//   [\"\", \"\", \"\"],\n//   [\"\", \"\", \"\"],\n// ]);\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Board() {\n  _s();\n\n  const computerBoardState = useSelector(state => state.game); // const [computerBoardState, setComputerBoard] = useState(computerBoard);\n\n  const computerBoardComponent = [];\n\n  for (let i = 0; i < computerBoardState.length; i++) {\n    let row = computerBoardState[i];\n\n    for (let j = 0; j < row.length; j++) {\n      computerBoardComponent.push( /*#__PURE__*/_jsxDEV(ComputerSquare, {\n        symbol: computerBoardState[i][j]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)); // computerBoardComponent.push(\n      //   <ComputerSquare\n      //     symbol={computerBoardState[i][j]}\n      //     onClick={setComputerBoard}\n      //     boardState={computerBoardState}\n      //     x={i}\n      //     y={j}\n      //   />\n      // );\n\n      if (computerBoardState[i][j] === \"X\") {\n        humanCount++;\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"count\",\n      children: [\"Human: \", humanCount, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n} // function randomlyChooseFiveShips(board) {\n//   let newArray = [];\n//   for (let i = 0; i < board.length; i++) {\n//     newArray.push(i);\n//   }\n//   let shipCount = 0;\n//   while (shipCount !== totalShip) {\n//     let rowPos = newArray[Math.floor(Math.random() * newArray.length)];\n//     let colPos = newArray[Math.floor(Math.random() * newArray.length)];\n//     if (board[rowPos][colPos] === \"\") {\n//       board[rowPos][colPos] = \"Ship\";\n//       shipCount += 1;\n//     }\n//   }\n//   return board;\n// }\n\n_s(Board, \"2Z/UzfXrrdCM1yg1l1GfZ6KgWsg=\", true);\n\n_c = Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/jingjing/NEU_Align_CS/CS5610 Web Dev/Jingjing-Liao-project2/jingjing-liao-project2 Redux/src/FreePlayBoard.jsx"],"names":["ComputerSquare","useState","Board","computerBoardState","useSelector","state","game","computerBoardComponent","i","length","row","j","push","humanCount"],"mappings":";;;AAAA,OAAOA,cAAP,MAA2B,kBAA3B;AACA,OAAO,aAAP;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CAEA;AACA;AACA;AACA;AACA;;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B,QAAMC,kBAAkB,GAAGC,WAAW,CAAEC,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAtC,CAD8B,CAE9B;;AACA,QAAMC,sBAAsB,GAAG,EAA/B;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,kBAAkB,CAACM,MAAvC,EAA+CD,CAAC,EAAhD,EAAoD;AAClD,QAAIE,GAAG,GAAGP,kBAAkB,CAACK,CAAD,CAA5B;;AACA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAAG,CAACD,MAAxB,EAAgCE,CAAC,EAAjC,EAAqC;AACnCJ,MAAAA,sBAAsB,CAACK,IAAvB,eACE,QAAC,cAAD;AAAgB,QAAA,MAAM,EAAET,kBAAkB,CAACK,CAAD,CAAlB,CAAsBG,CAAtB;AAAxB;AAAA;AAAA;AAAA;AAAA,cADF,EADmC,CAInC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,UAAIR,kBAAkB,CAACK,CAAD,CAAlB,CAAsBG,CAAtB,MAA6B,GAAjC,EAAsC;AACpCE,QAAAA,UAAU;AACX;AACF;AACF;;AAED,sBACE;AAAA,2BACE;AAAK,MAAA,KAAK,EAAC,OAAX;AAAA,4BAA2BA,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,C,CAED;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GAjDwBX,K;;KAAAA,K","sourcesContent":["import ComputerSquare from \"./ComputerSquare\";\nimport \"./Board.css\";\nimport { useState } from \"react\";\n\n// let computerBoard = randomlyChooseFiveShips([\n//   [\"\", \"\", \"\"],\n//   [\"\", \"\", \"\"],\n//   [\"\", \"\", \"\"],\n// ]);\n\nexport default function Board() {\n  const computerBoardState = useSelector((state) => state.game);\n  // const [computerBoardState, setComputerBoard] = useState(computerBoard);\n  const computerBoardComponent = [];\n\n  for (let i = 0; i < computerBoardState.length; i++) {\n    let row = computerBoardState[i];\n    for (let j = 0; j < row.length; j++) {\n      computerBoardComponent.push(\n        <ComputerSquare symbol={computerBoardState[i][j]} />\n      );\n      // computerBoardComponent.push(\n      //   <ComputerSquare\n      //     symbol={computerBoardState[i][j]}\n      //     onClick={setComputerBoard}\n      //     boardState={computerBoardState}\n      //     x={i}\n      //     y={j}\n      //   />\n      // );\n      if (computerBoardState[i][j] === \"X\") {\n        humanCount++;\n      }\n    }\n  }\n\n  return (\n    <div>\n      <div class=\"count\">Human: {humanCount} </div>\n    </div>\n  );\n}\n\n// function randomlyChooseFiveShips(board) {\n//   let newArray = [];\n//   for (let i = 0; i < board.length; i++) {\n//     newArray.push(i);\n//   }\n\n//   let shipCount = 0;\n//   while (shipCount !== totalShip) {\n//     let rowPos = newArray[Math.floor(Math.random() * newArray.length)];\n//     let colPos = newArray[Math.floor(Math.random() * newArray.length)];\n//     if (board[rowPos][colPos] === \"\") {\n//       board[rowPos][colPos] = \"Ship\";\n//       shipCount += 1;\n//     }\n//   }\n//   return board;\n// }\n"]},"metadata":{},"sourceType":"module"}