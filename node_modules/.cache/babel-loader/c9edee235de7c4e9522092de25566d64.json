{"ast":null,"code":"var _jsxFileName = \"/Users/jingjing/NEU_Align_CS/jingjing-liao-project2 Redux Michael/src/Game.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./Game.css\";\nimport { useSelector } from \"react-redux\";\nimport ResetButton from \"./ResetButton\";\nimport HumanBoard from \"./HumanBoard\";\nimport ComputerBoard from \"./ComputerBoard\";\nimport ComputerSquare from \"./ComputerSquare\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Game() {\n  _s();\n\n  const humanClickCount = useSelector(state => state.game.count);\n  const computerClickCount = useSelector(state => state.computerGame.count);\n  const turn = useSelector(state => state.turn);\n  const computerBoardState = useSelector(state => state.computerGame.gameBoard);\n  const computerBoardComponent = [];\n\n  for (let i = 0; i < computerBoardState.length; i++) {\n    let row = computerBoardState[i];\n\n    for (let j = 0; j < row.length; j++) {\n      computerBoardComponent.push( /*#__PURE__*/_jsxDEV(ComputerSquare, {\n        symbol: computerBoardState[i][j],\n        x: i,\n        y: j\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"board\",\n    children: computerBoardComponent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n  const totalShips = 5;\n  let winner = \"\";\n\n  if (humanClickCount === totalShips) {\n    winner = \"Game Over! You Won!\";\n  } else if (computerClickCount === totalShips) {\n    winner = \"Game Over! Computer Won!\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"winner\",\n      children: [winner, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"count\",\n      children: [\"Human Score: \", humanClickCount, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"computerBoardComponent\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(ResetButton, {\n      text: \"Reset The Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Game, \"C8/W2ffL01Z7aNxYAVkRKzfA1Cc=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/jingjing/NEU_Align_CS/jingjing-liao-project2 Redux Michael/src/Game.jsx"],"names":["useSelector","ResetButton","HumanBoard","ComputerBoard","ComputerSquare","Game","humanClickCount","state","game","count","computerClickCount","computerGame","turn","computerBoardState","gameBoard","computerBoardComponent","i","length","row","j","push","totalShips","winner"],"mappings":";;;AAAA,OAAO,YAAP;AACA,SAASA,WAAT,QAA4B,aAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAMC,eAAe,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWC,KAAvB,CAAnC;AACA,QAAMC,kBAAkB,GAAGV,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACI,YAAN,CAAmBF,KAA/B,CAAtC;AACA,QAAMG,IAAI,GAAGZ,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACK,IAAlB,CAAxB;AAEA,QAAMC,kBAAkB,GAAGb,WAAW,CACnCO,KAAD,IAAWA,KAAK,CAACI,YAAN,CAAmBG,SADM,CAAtC;AAIA,QAAMC,sBAAsB,GAAG,EAA/B;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,kBAAkB,CAACI,MAAvC,EAA+CD,CAAC,EAAhD,EAAoD;AAClD,QAAIE,GAAG,GAAGL,kBAAkB,CAACG,CAAD,CAA5B;;AACA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAAG,CAACD,MAAxB,EAAgCE,CAAC,EAAjC,EAAqC;AACnCJ,MAAAA,sBAAsB,CAACK,IAAvB,eACE,QAAC,cAAD;AAAgB,QAAA,MAAM,EAAEP,kBAAkB,CAACG,CAAD,CAAlB,CAAsBG,CAAtB,CAAxB;AAAkD,QAAA,CAAC,EAAEH,CAArD;AAAwD,QAAA,CAAC,EAAEG;AAA3D;AAAA;AAAA;AAAA;AAAA,cADF;AAGD;AACF;;AAED,sBAAO;AAAK,IAAA,KAAK,EAAC,OAAX;AAAA,cAAoBJ;AAApB;AAAA;AAAA;AAAA;AAAA,UAAP;AAEA,QAAMM,UAAU,GAAG,CAAnB;AACA,MAAIC,MAAM,GAAG,EAAb;;AACA,MAAIhB,eAAe,KAAKe,UAAxB,EAAoC;AAClCC,IAAAA,MAAM,GAAG,qBAAT;AACD,GAFD,MAEO,IAAIZ,kBAAkB,KAAKW,UAA3B,EAAuC;AAC5CC,IAAAA,MAAM,GAAG,0BAAT;AACD;;AACD,sBACE;AAAA,4BAGE;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA,iBAAqBA,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAKE;AAAK,MAAA,KAAK,EAAC,OAAX;AAAA,kCAAiChB,eAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAMG;AAAA;AAAA;AAAA;AAAA,YANH,eAOE,QAAC,WAAD;AAAa,MAAA,IAAI,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAvCuBD,I;UACEL,W,EACGA,W,EACdA,W,EAEcA,W;;;KALLK,I","sourcesContent":["import \"./Game.css\";\nimport { useSelector } from \"react-redux\";\nimport ResetButton from \"./ResetButton\";\nimport HumanBoard from \"./HumanBoard\";\nimport ComputerBoard from \"./ComputerBoard\";\n\nimport ComputerSquare from \"./ComputerSquare\";\n\nexport default function Game() {\n  const humanClickCount = useSelector((state) => state.game.count);\n  const computerClickCount = useSelector((state) => state.computerGame.count);\n  const turn = useSelector((state) => state.turn);\n\n  const computerBoardState = useSelector(\n    (state) => state.computerGame.gameBoard\n  );\n\n  const computerBoardComponent = [];\n  for (let i = 0; i < computerBoardState.length; i++) {\n    let row = computerBoardState[i];\n    for (let j = 0; j < row.length; j++) {\n      computerBoardComponent.push(\n        <ComputerSquare symbol={computerBoardState[i][j]} x={i} y={j} />\n      );\n    }\n  }\n\n  return <div class=\"board\">{computerBoardComponent}</div>;\n\n  const totalShips = 5;\n  let winner = \"\";\n  if (humanClickCount === totalShips) {\n    winner = \"Game Over! You Won!\";\n  } else if (computerClickCount === totalShips) {\n    winner = \"Game Over! Computer Won!\";\n  }\n  return (\n    <div>\n      {/* <div class=\"count\">Score: {humanClickCount} </div> */}\n      {/* <div class=\"count\">{turn === 0 ? \"Human's Turn\" : \"Computer's Turn\"}</div> */}\n      <div class=\"winner\">{winner} </div>\n      {/* {turn === 0 ? <ComputerBoard /> : <HumanBoard />} */}\n      <div class=\"count\">Human Score: {humanClickCount} </div>\n      {<computerBoardComponent />}\n      <ResetButton text=\"Reset The Game\" />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}