{"ast":null,"code":"import { cloneDeep } from \"lodash\";\nimport { randomlyChooseFiveShips } from \"./reducerUtils\";\nconst initialBoard = [[\"\", \"\", \"\"], [\"\", \"\", \"\"], [\"\", \"\", \"\"]];\nconst initialState = {\n  count: 0,\n  gameBoard: randomlyChooseFiveShips(initialBoard)\n};\nexport default function humanBoardReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"ComputerClickSquare\":\n      {\n        const value = state.gameBoard[action.x][action.y];\n\n        if (value === \"Ship\") {\n          state.gameBoard[action.x][action.y] = \"X\";\n          state.count++;\n        } else if (value === \"\") {\n          // TODO: There is a library called immutable for React. Try it.\n          const copy = cloneDeep(state.gameBoard);\n          copy[action.x][action.y] = \"✓\";\n          state.gameBoard = copy;\n        }\n\n        return { ...state\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/jingjing/NEU_Align_CS/jingjing-liao-project2 Redux Michael/src/reducers/HumanBoardReducer.js"],"names":["cloneDeep","randomlyChooseFiveShips","initialBoard","initialState","count","gameBoard","humanBoardReducer","state","action","type","value","x","y","copy"],"mappings":"AAAA,SAASA,SAAT,QAA0B,QAA1B;AACA,SAASC,uBAAT,QAAwC,gBAAxC;AAEA,MAAMC,YAAY,GAAG,CACnB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CADmB,EAEnB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAFmB,EAGnB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAHmB,CAArB;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,CADY;AAEnBC,EAAAA,SAAS,EAAEJ,uBAAuB,CAACC,YAAD;AAFf,CAArB;AAKA,eAAe,SAASI,iBAAT,GAAyD;AAAA,MAA9BC,KAA8B,uEAAtBJ,YAAsB;AAAA,MAARK,MAAQ;;AACtE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,qBAAL;AAA4B;AAC1B,cAAMC,KAAK,GAAGH,KAAK,CAACF,SAAN,CAAgBG,MAAM,CAACG,CAAvB,EAA0BH,MAAM,CAACI,CAAjC,CAAd;;AACA,YAAIF,KAAK,KAAK,MAAd,EAAsB;AACpBH,UAAAA,KAAK,CAACF,SAAN,CAAgBG,MAAM,CAACG,CAAvB,EAA0BH,MAAM,CAACI,CAAjC,IAAsC,GAAtC;AACAL,UAAAA,KAAK,CAACH,KAAN;AACD,SAHD,MAGO,IAAIM,KAAK,KAAK,EAAd,EAAkB;AACvB;AACA,gBAAMG,IAAI,GAAGb,SAAS,CAACO,KAAK,CAACF,SAAP,CAAtB;AACAQ,UAAAA,IAAI,CAACL,MAAM,CAACG,CAAR,CAAJ,CAAeH,MAAM,CAACI,CAAtB,IAA2B,GAA3B;AACAL,UAAAA,KAAK,CAACF,SAAN,GAAkBQ,IAAlB;AACD;;AACD,eAAO,EAAE,GAAGN;AAAL,SAAP;AACD;;AAED;AACE,aAAOA,KAAP;AAhBJ;AAkBD","sourcesContent":["import { cloneDeep } from \"lodash\";\nimport { randomlyChooseFiveShips } from \"./reducerUtils\";\n\nconst initialBoard = [\n  [\"\", \"\", \"\"],\n  [\"\", \"\", \"\"],\n  [\"\", \"\", \"\"],\n];\n\nconst initialState = {\n  count: 0,\n  gameBoard: randomlyChooseFiveShips(initialBoard),\n};\n\nexport default function humanBoardReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"ComputerClickSquare\": {\n      const value = state.gameBoard[action.x][action.y];\n      if (value === \"Ship\") {\n        state.gameBoard[action.x][action.y] = \"X\";\n        state.count++;\n      } else if (value === \"\") {\n        // TODO: There is a library called immutable for React. Try it.\n        const copy = cloneDeep(state.gameBoard);\n        copy[action.x][action.y] = \"✓\";\n        state.gameBoard = copy;\n      }\n      return { ...state };\n    }\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}