{"ast":null,"code":"var _jsxFileName = \"/Users/jingjing/NEU_Align_CS/CS5610 Web Dev/Jingjing-Liao-project2/jingjing-liao-project2/src/Board.jsx\",\n    _s = $RefreshSig$();\n\nimport Square from \"./ComputerSquare\";\nimport \"./Board.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst totalShip = 5;\nlet playerTurn = \"Human's turn\";\nexport default function Board() {\n  _s();\n\n  //   let computerBoard = randomlyChooseFiveShips([\n  //     [\"\", \"\", \"\"],\n  //     [\"\", \"\", \"\"],\n  //     [\"\", \"\", \"\"],\n  //   ]);\n  //   const [computerBoardState, setComputerBoard] = useState(computerBoard);\n  //   const computerBoardComponent = [];\n  //   let humanCount = 0;\n  //   for (let i = 0; i < computerBoardState.length; i++) {\n  //     let row = computerBoardState[i];\n  //     for (let j = 0; j < row.length; j++) {\n  //       computerBoardComponent.push(\n  //         <Square\n  //           symbol={computerBoardState[i][j]}\n  //           onClick={setComputerBoard}\n  //           boardState={computerBoardState}\n  //           x={i}\n  //           y={j}\n  //         />\n  //       );\n  //       if (computerBoardState[i][j] === \"X\") {\n  //         humanCount++;\n  //       }\n  //     }\n  //   }\n  let humanBoard = randomlyChooseFiveShips([[\"\", \"\", \"\"], [\"\", \"\", \"\"], [\"\", \"\", \"\"]]);\n  const [humanBoardState, setHumanBoard] = useState(humanBoard);\n  const humanBoardComponent = [];\n  let computerCount = 0;\n\n  for (let i = 0; i < humanBoardState.length; i++) {\n    let row = humanBoardState[i];\n\n    for (let j = 0; j < row.length; j++) {\n      humanBoardComponent.push( /*#__PURE__*/_jsxDEV(Square, {\n        symbol: humanBoardState[i][j],\n        onClick: setHumanBoard,\n        boardState: humanBoardState,\n        x: i,\n        y: j\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this));\n\n      if (humanBoardState[i][j] === \"X\") {\n        computerCount++;\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"count\",\n      children: [\"Human: \", humanCount, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"computerCount\",\n        children: \"Computer: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"playerDisplay\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"turn\",\n        children: \"Computer's Turn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"board\",\n        children: humanBoardComponent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Board, \"+gnBpeDyTCfhf7dB0jwsPobvtRY=\");\n\n_c = Board;\n\nfunction randomlyChooseFiveShips(board) {\n  let newArray = [];\n\n  for (let i = 0; i < board.length; i++) {\n    newArray.push(i);\n  }\n\n  let shipCount = 0;\n\n  while (shipCount != totalShip) {\n    let rowPos = newArray[Math.floor(Math.random() * newArray.length)];\n    let colPos = newArray[Math.floor(Math.random() * newArray.length)];\n\n    if (board[rowPos][colPos] === \"\") {\n      board[rowPos][colPos] = \"Ship\";\n      shipCount += 1;\n    }\n  }\n\n  return board;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/jingjing/NEU_Align_CS/CS5610 Web Dev/Jingjing-Liao-project2/jingjing-liao-project2/src/Board.jsx"],"names":["Square","useState","totalShip","playerTurn","Board","humanBoard","randomlyChooseFiveShips","humanBoardState","setHumanBoard","humanBoardComponent","computerCount","i","length","row","j","push","humanCount","board","newArray","shipCount","rowPos","Math","floor","random","colPos"],"mappings":"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","sourcesContent":["import Square from \"./ComputerSquare\";\nimport \"./Board.css\";\nimport { useState } from \"react\";\n\nconst totalShip = 5;\nlet playerTurn = \"Human's turn\";\n\nexport default function Board() {\n  //   let computerBoard = randomlyChooseFiveShips([\n  //     [\"\", \"\", \"\"],\n  //     [\"\", \"\", \"\"],\n  //     [\"\", \"\", \"\"],\n  //   ]);\n  //   const [computerBoardState, setComputerBoard] = useState(computerBoard);\n\n  //   const computerBoardComponent = [];\n  //   let humanCount = 0;\n\n  //   for (let i = 0; i < computerBoardState.length; i++) {\n  //     let row = computerBoardState[i];\n  //     for (let j = 0; j < row.length; j++) {\n  //       computerBoardComponent.push(\n  //         <Square\n  //           symbol={computerBoardState[i][j]}\n  //           onClick={setComputerBoard}\n  //           boardState={computerBoardState}\n  //           x={i}\n  //           y={j}\n  //         />\n  //       );\n  //       if (computerBoardState[i][j] === \"X\") {\n  //         humanCount++;\n  //       }\n  //     }\n  //   }\n\n  let humanBoard = randomlyChooseFiveShips([\n    [\"\", \"\", \"\"],\n    [\"\", \"\", \"\"],\n    [\"\", \"\", \"\"],\n  ]);\n  const [humanBoardState, setHumanBoard] = useState(humanBoard);\n\n  const humanBoardComponent = [];\n  let computerCount = 0;\n\n  for (let i = 0; i < humanBoardState.length; i++) {\n    let row = humanBoardState[i];\n    for (let j = 0; j < row.length; j++) {\n      humanBoardComponent.push(\n        <Square\n          symbol={humanBoardState[i][j]}\n          onClick={setHumanBoard}\n          boardState={humanBoardState}\n          x={i}\n          y={j}\n        />\n      );\n      if (humanBoardState[i][j] === \"X\") {\n        computerCount++;\n      }\n    }\n  }\n\n  return (\n    <div>\n      <div class=\"count\">\n        Human: {humanCount} <span class=\"computerCount\">Computer: {}</span>\n      </div>\n      {/* <div class=\"playerDisplay\">\n        <div class=\"turn\">Human's Turn</div>\n        <div id=\"board\">{humanBoardComponent}</div>\n      </div> */}\n\n      <div class=\"playerDisplay\">\n        <div class=\"turn\">Computer's Turn</div>\n        <div id=\"board\">{humanBoardComponent}</div>\n      </div>\n    </div>\n  );\n}\n\nfunction randomlyChooseFiveShips(board) {\n  let newArray = [];\n  for (let i = 0; i < board.length; i++) {\n    newArray.push(i);\n  }\n\n  let shipCount = 0;\n  while (shipCount != totalShip) {\n    let rowPos = newArray[Math.floor(Math.random() * newArray.length)];\n    let colPos = newArray[Math.floor(Math.random() * newArray.length)];\n    if (board[rowPos][colPos] === \"\") {\n      board[rowPos][colPos] = \"Ship\";\n      shipCount += 1;\n    }\n  }\n  return board;\n}\n"]},"metadata":{},"sourceType":"module"}