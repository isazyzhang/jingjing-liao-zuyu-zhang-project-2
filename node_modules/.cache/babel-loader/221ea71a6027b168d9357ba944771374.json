{"ast":null,"code":"var _jsxFileName = \"/Users/jingjing/NEU_Align_CS/jingjing-liao-project2 Redux Michael/src/Game.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./Game.css\";\nimport { useSelector } from \"react-redux\";\nimport ResetButton from \"./ResetButton\";\nimport HumanBoard from \"./HumanBoard\";\nimport ComputerBoard from \"./ComputerBoard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Game() {\n  _s();\n\n  const humanClickCount = useSelector(state => state.game.count);\n  const computerClickCount = useSelector(state => state.computerGame.count);\n  const turn = useSelector(state => state.turn);\n  const totalShips = 5;\n  let winner = \"\";\n\n  if (humanClickCount === totalShips) {\n    winner = \"Game Over! You Won!\";\n  } else if (computerClickCount === totalShips) {\n    winner = \"Game Over! Computer Won!\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"count\",\n      children: [\"Score: \", humanClickCount, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"count\",\n      children: \"Human's Turn \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"winner\",\n      children: [winner, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), turn === 0 ? /*#__PURE__*/_jsxDEV(ComputerBoard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(HumanBoard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 41\n    }, this), /*#__PURE__*/_jsxDEV(ResetButton, {\n      text: \"Reset The Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Game, \"DN6NI/n2B2tQ382uhx0LU6ZuCbk=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/jingjing/NEU_Align_CS/jingjing-liao-project2 Redux Michael/src/Game.jsx"],"names":["useSelector","ResetButton","HumanBoard","ComputerBoard","Game","humanClickCount","state","game","count","computerClickCount","computerGame","turn","totalShips","winner"],"mappings":";;;AAAA,OAAO,YAAP;AACA,SAASA,WAAT,QAA4B,aAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAMC,eAAe,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWC,KAAvB,CAAnC;AACA,QAAMC,kBAAkB,GAAGT,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACI,YAAN,CAAmBF,KAA/B,CAAtC;AACA,QAAMG,IAAI,GAAGX,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACK,IAAlB,CAAxB;AAEA,QAAMC,UAAU,GAAG,CAAnB;AACA,MAAIC,MAAM,GAAG,EAAb;;AACA,MAAIR,eAAe,KAAKO,UAAxB,EAAoC;AAClCC,IAAAA,MAAM,GAAG,qBAAT;AACD,GAFD,MAEO,IAAIJ,kBAAkB,KAAKG,UAA3B,EAAuC;AAC5CC,IAAAA,MAAM,GAAG,0BAAT;AACD;;AACD,sBACE;AAAA,4BACE;AAAK,MAAA,KAAK,EAAC,OAAX;AAAA,4BAA2BR,eAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,KAAK,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA,iBAAqBQ,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAIGF,IAAI,KAAK,CAAT,gBAAa,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAAb,gBAAiC,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAJpC,eAKE,QAAC,WAAD;AAAa,MAAA,IAAI,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GArBuBP,I;UACEJ,W,EACGA,W,EACdA,W;;;KAHSI,I","sourcesContent":["import \"./Game.css\";\nimport { useSelector } from \"react-redux\";\nimport ResetButton from \"./ResetButton\";\nimport HumanBoard from \"./HumanBoard\";\nimport ComputerBoard from \"./ComputerBoard\";\n\nexport default function Game() {\n  const humanClickCount = useSelector((state) => state.game.count);\n  const computerClickCount = useSelector((state) => state.computerGame.count);\n  const turn = useSelector((state) => state.turn);\n\n  const totalShips = 5;\n  let winner = \"\";\n  if (humanClickCount === totalShips) {\n    winner = \"Game Over! You Won!\";\n  } else if (computerClickCount === totalShips) {\n    winner = \"Game Over! Computer Won!\";\n  }\n  return (\n    <div>\n      <div class=\"count\">Score: {humanClickCount} </div>\n      <div class=\"count\">Human's Turn </div>\n      <div class=\"winner\">{winner} </div>\n      {turn === 0 ? <ComputerBoard /> : <HumanBoard />}\n      <ResetButton text=\"Reset The Game\" />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}