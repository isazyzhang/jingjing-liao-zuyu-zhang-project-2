{"ast":null,"code":"var _jsxFileName = \"/Users/jingjing/NEU_Align_CS/CS5610 Web Dev/Jingjing-Liao-project2/jingjing-liao-project2/src/Board.jsx\",\n    _s = $RefreshSig$();\n\nimport Square from \"./Square\";\nimport \"./Board.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst totalShip = 5;\nexport default function Board() {\n  _s();\n\n  const [boardState, setBoard] = useState([[\"\", \"\", \"\"], [\"\", \"\", \"\"], [\"\", \"\", \"\"]]);\n  let newArray = [];\n\n  for (let i = 0; i < board.length; i++) {\n    newArray.push(i);\n  }\n\n  let shipPosition = new Set();\n\n  while (shipPosition.size != totalShip) {\n    let rowPos = newArray[Math.floor(Math.random() * newArray.length)];\n    let colPos = newArray[Math.floor(Math.random() * newArray.length)];\n    shipPosition.add([rowPos, colPos]);\n  }\n\n  shipPosition.forEach(function (pos) {\n    board[pos[0]][pos[1]] = \"Ship\";\n  });\n  const boardComponent = [];\n  let count = 0;\n\n  for (let i = 0; i < boardState.length; i++) {\n    let row = boardState[i];\n\n    for (let j = 0; j < row.length; j++) {\n      boardComponent.push( /*#__PURE__*/_jsxDEV(Square, {\n        symbol: boardState[i][j],\n        onClick: setBoard,\n        boardState: boardState,\n        x: i,\n        y: j\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this));\n\n      if (boardState[i][j] === \"X\") {\n        count++;\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"count\",\n      children: [\"Player Score: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"board\",\n      children: boardComponent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Board, \"J+awiAzV40Znx0qSXOtWQ02zpAo=\");\n\n_c = Board;\n\nfunction randomlyChooseFiveShips(board) {\n  let newArray = [];\n\n  for (let i = 0; i < board.length; i++) {\n    newArray.push(i);\n  }\n\n  let shipPosition = new Set();\n\n  while (shipPosition.size != totalShip) {\n    let rowPos = newArray[Math.floor(Math.random() * newArray.length)];\n    let colPos = newArray[Math.floor(Math.random() * newArray.length)];\n    shipPosition.add([rowPos, colPos]);\n  }\n\n  shipPosition.forEach(function (pos) {\n    board[pos[0]][pos[1]] = \"Ship\";\n  });\n  return board;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/jingjing/NEU_Align_CS/CS5610 Web Dev/Jingjing-Liao-project2/jingjing-liao-project2/src/Board.jsx"],"names":["Square","useState","totalShip","Board","boardState","setBoard","newArray","i","board","length","push","shipPosition","Set","size","rowPos","Math","floor","random","colPos","add","forEach","pos","boardComponent","count","row","j","randomlyChooseFiveShips"],"mappings":"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","sourcesContent":["import Square from \"./Square\";\nimport \"./Board.css\";\nimport { useState } from \"react\";\n\nconst totalShip = 5;\n\nexport default function Board() {\n  const [boardState, setBoard] = useState([\n    [\"\", \"\", \"\"],\n    [\"\", \"\", \"\"],\n    [\"\", \"\", \"\"],\n  ]);\n\n  let newArray = [];\n  for (let i = 0; i < board.length; i++) {\n    newArray.push(i);\n  }\n  let shipPosition = new Set();\n  while (shipPosition.size != totalShip) {\n    let rowPos = newArray[Math.floor(Math.random() * newArray.length)];\n    let colPos = newArray[Math.floor(Math.random() * newArray.length)];\n    shipPosition.add([rowPos, colPos]);\n  }\n  shipPosition.forEach(function (pos) {\n    board[pos[0]][pos[1]] = \"Ship\";\n  });\n  const boardComponent = [];\n  let count = 0;\n\n  for (let i = 0; i < boardState.length; i++) {\n    let row = boardState[i];\n    for (let j = 0; j < row.length; j++) {\n      boardComponent.push(\n        <Square\n          symbol={boardState[i][j]}\n          onClick={setBoard}\n          boardState={boardState}\n          x={i}\n          y={j}\n        />\n      );\n      if (boardState[i][j] === \"X\") {\n        count++;\n      }\n    }\n  }\n\n  return (\n    <div>\n      <div class=\"count\">Player Score: {count}</div>\n      <div id=\"board\">{boardComponent}</div>\n    </div>\n  );\n}\n\nfunction randomlyChooseFiveShips(board) {\n  let newArray = [];\n  for (let i = 0; i < board.length; i++) {\n    newArray.push(i);\n  }\n  let shipPosition = new Set();\n  while (shipPosition.size != totalShip) {\n    let rowPos = newArray[Math.floor(Math.random() * newArray.length)];\n    let colPos = newArray[Math.floor(Math.random() * newArray.length)];\n    shipPosition.add([rowPos, colPos]);\n  }\n  shipPosition.forEach(function (pos) {\n    board[pos[0]][pos[1]] = \"Ship\";\n  });\n  return board;\n}\n"]},"metadata":{},"sourceType":"module"}