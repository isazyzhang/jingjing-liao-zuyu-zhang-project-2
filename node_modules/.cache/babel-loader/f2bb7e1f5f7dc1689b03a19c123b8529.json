{"ast":null,"code":"// import ComputerSquare from \"./ComputerSquare\";\n// import HumanSquare from \"./HumanSquare\";\n// import \"./Board.css\";\n// import { useState } from \"react\";\n// const totalShip = 5;\n// let computerCount = 0;\n// let humanCount = 0;\n// let turn = 0;\n// let computerBoard = randomlyChooseFiveShips([\n//   [\"\", \"\", \"\"],\n//   [\"\", \"\", \"\"],\n//   [\"\", \"\", \"\"],\n// ]);\n// let humanBoard = randomlyChooseFiveShips([\n//   [\"\", \"\", \"\"],\n//   [\"\", \"\", \"\"],\n//   [\"\", \"\", \"\"],\n// ]);\n// export default function Board() {\n//   const [computerBoardState, setComputerBoard] = useState(computerBoard);\n//   const computerBoardComponent = [];\n//   for (let i = 0; i < computerBoardState.length; i++) {\n//     let row = computerBoardState[i];\n//     for (let j = 0; j < row.length; j++) {\n//       computerBoardComponent.push(\n//         <ComputerSquare\n//           symbol={computerBoardState[i][j]}\n//           onClick={setComputerBoard}\n//           boardState={computerBoardState}\n//           x={i}\n//           y={j}\n//         />\n//       );\n//       if (computerBoardState[i][j] === \"X\") {\n//         humanCount++;\n//       }\n//     }\n//   }\n//   const [humanBoardState, setHumanBoard] = useState(humanBoard);\n//   const humanBoardComponent = [];\n//   for (let i = 0; i < humanBoardState.length; i++) {\n//     let row = humanBoardState[i];\n//     for (let j = 0; j < row.length; j++) {\n//       humanBoardComponent.push(\n//         <HumanSquare\n//           symbol={humanBoardState[i][j]}\n//           onClick={setHumanBoard}\n//           boardState={humanBoardState}\n//           x={i}\n//           y={j}\n//         />\n//       );\n//       if (humanBoardState[i][j] === \"X\") {\n//         computerCount++;\n//       }\n//     }\n//   }\n//   while (computerCount != totalShip && humanCount != totalShip) {\n//     if (turn === 0) {\n//       turn = 1;\n//       return (\n//         <div>\n//           <div class=\"count\">\n//             Human: {humanCount}{\" \"}\n//             <span class=\"computerCount\">Computer: {computerCount}</span>\n//           </div>\n//           <div>\n//             <div class=\"turn\">Human's Turn</div>\n//             <div id=\"board\">{computerBoardComponent}</div>\n//           </div>\n//         </div>\n//       );\n//     } else {\n//       // debugger;\n//       // setTurnState(0);\n//       turn = 0;\n//       let newArray = [];\n//       for (let i = 0; i < humanBoard.length; i++) {\n//         newArray.push(i);\n//       }\n//       let rowPos = newArray[Math.floor(Math.random() * newArray.length)];\n//       let colPos = newArray[Math.floor(Math.random() * newArray.length)];\n//       while (\n//         humanBoardState[rowPos][colPos] !== \"\" &&\n//         humanBoardState[rowPos][colPos] !== \"Ship\"\n//       ) {\n//         rowPos = newArray[Math.floor(Math.random() * newArray.length)];\n//         colPos = newArray[Math.floor(Math.random() * newArray.length)];\n//       }\n//       if (humanBoardState[rowPos][colPos] === \"\") {\n//         humanBoardState[rowPos][colPos] = \"⚫\";\n//       } else {\n//         humanBoardState[rowPos][colPos] = \"X\";\n//       }\n//       humanBoardComponent[3 * rowPos + colPos] = (\n//         <HumanSquare\n//           symbol={humanBoardState[rowPos][colPos]}\n//           onClick={setHumanBoard}\n//           boardState={humanBoardState}\n//           x={rowPos}\n//           y={colPos}\n//         />\n//       );\n//       return (\n//         <div>\n//           <div class=\"count\">\n//             Human: {humanCount}{\" \"}\n//             <span class=\"computerCount\">Computer: {computerCount}</span>\n//           </div>\n//           <div>\n//             <div class=\"turn\">Computer's Turn</div>\n//             <div id=\"board\">{humanBoardComponent}</div>\n//           </div>\n//         </div>\n//       );\n//     }\n//   }\n// }\n// function randomlyChooseFiveShips(board) {\n//   let newArray = [];\n//   for (let i = 0; i < board.length; i++) {\n//     newArray.push(i);\n//   }\n//   let shipCount = 0;\n//   while (shipCount !== totalShip) {\n//     let rowPos = newArray[Math.floor(Math.random() * newArray.length)];\n//     let colPos = newArray[Math.floor(Math.random() * newArray.length)];\n//     if (board[rowPos][colPos] === \"\") {\n//       board[rowPos][colPos] = \"Ship\";\n//       shipCount += 1;\n//     }\n//   }\n//   return board;\n// }","map":{"version":3,"sources":["/Users/jingjing/NEU_Align_CS/CS5610 Web Dev/Jingjing-Liao-project2/jingjing-liao-project2 Redux copy/src/Board.jsx"],"names":[],"mappingssourcesContent":["// import ComputerSquare from \"./ComputerSquare\";\n// import HumanSquare from \"./HumanSquare\";\n// import \"./Board.css\";\n// import { useState } from \"react\";\n\n// const totalShip = 5;\n// let computerCount = 0;\n// let humanCount = 0;\n// let turn = 0;\n\n// let computerBoard = randomlyChooseFiveShips([\n//   [\"\", \"\", \"\"],\n//   [\"\", \"\", \"\"],\n//   [\"\", \"\", \"\"],\n// ]);\n\n// let humanBoard = randomlyChooseFiveShips([\n//   [\"\", \"\", \"\"],\n//   [\"\", \"\", \"\"],\n//   [\"\", \"\", \"\"],\n// ]);\n\n// export default function Board() {\n//   const [computerBoardState, setComputerBoard] = useState(computerBoard);\n//   const computerBoardComponent = [];\n\n//   for (let i = 0; i < computerBoardState.length; i++) {\n//     let row = computerBoardState[i];\n//     for (let j = 0; j < row.length; j++) {\n//       computerBoardComponent.push(\n//         <ComputerSquare\n//           symbol={computerBoardState[i][j]}\n//           onClick={setComputerBoard}\n//           boardState={computerBoardState}\n//           x={i}\n//           y={j}\n//         />\n//       );\n//       if (computerBoardState[i][j] === \"X\") {\n//         humanCount++;\n//       }\n//     }\n//   }\n\n//   const [humanBoardState, setHumanBoard] = useState(humanBoard);\n//   const humanBoardComponent = [];\n\n//   for (let i = 0; i < humanBoardState.length; i++) {\n//     let row = humanBoardState[i];\n//     for (let j = 0; j < row.length; j++) {\n//       humanBoardComponent.push(\n//         <HumanSquare\n//           symbol={humanBoardState[i][j]}\n//           onClick={setHumanBoard}\n//           boardState={humanBoardState}\n//           x={i}\n//           y={j}\n//         />\n//       );\n//       if (humanBoardState[i][j] === \"X\") {\n//         computerCount++;\n//       }\n//     }\n//   }\n\n//   while (computerCount != totalShip && humanCount != totalShip) {\n//     if (turn === 0) {\n//       turn = 1;\n//       return (\n//         <div>\n//           <div class=\"count\">\n//             Human: {humanCount}{\" \"}\n//             <span class=\"computerCount\">Computer: {computerCount}</span>\n//           </div>\n\n//           <div>\n//             <div class=\"turn\">Human's Turn</div>\n//             <div id=\"board\">{computerBoardComponent}</div>\n//           </div>\n//         </div>\n//       );\n//     } else {\n//       // debugger;\n//       // setTurnState(0);\n//       turn = 0;\n//       let newArray = [];\n//       for (let i = 0; i < humanBoard.length; i++) {\n//         newArray.push(i);\n//       }\n\n//       let rowPos = newArray[Math.floor(Math.random() * newArray.length)];\n//       let colPos = newArray[Math.floor(Math.random() * newArray.length)];\n//       while (\n//         humanBoardState[rowPos][colPos] !== \"\" &&\n//         humanBoardState[rowPos][colPos] !== \"Ship\"\n//       ) {\n//         rowPos = newArray[Math.floor(Math.random() * newArray.length)];\n//         colPos = newArray[Math.floor(Math.random() * newArray.length)];\n//       }\n\n//       if (humanBoardState[rowPos][colPos] === \"\") {\n//         humanBoardState[rowPos][colPos] = \"⚫\";\n//       } else {\n//         humanBoardState[rowPos][colPos] = \"X\";\n//       }\n\n//       humanBoardComponent[3 * rowPos + colPos] = (\n//         <HumanSquare\n//           symbol={humanBoardState[rowPos][colPos]}\n//           onClick={setHumanBoard}\n//           boardState={humanBoardState}\n//           x={rowPos}\n//           y={colPos}\n//         />\n//       );\n\n//       return (\n//         <div>\n//           <div class=\"count\">\n//             Human: {humanCount}{\" \"}\n//             <span class=\"computerCount\">Computer: {computerCount}</span>\n//           </div>\n\n//           <div>\n//             <div class=\"turn\">Computer's Turn</div>\n//             <div id=\"board\">{humanBoardComponent}</div>\n//           </div>\n//         </div>\n//       );\n//     }\n//   }\n// }\n\n// function randomlyChooseFiveShips(board) {\n//   let newArray = [];\n//   for (let i = 0; i < board.length; i++) {\n//     newArray.push(i);\n//   }\n\n//   let shipCount = 0;\n//   while (shipCount !== totalShip) {\n//     let rowPos = newArray[Math.floor(Math.random() * newArray.length)];\n//     let colPos = newArray[Math.floor(Math.random() * newArray.length)];\n//     if (board[rowPos][colPos] === \"\") {\n//       board[rowPos][colPos] = \"Ship\";\n//       shipCount += 1;\n//     }\n//   }\n//   return board;\n// }\n"]},"metadata":{},"sourceType":"module"}