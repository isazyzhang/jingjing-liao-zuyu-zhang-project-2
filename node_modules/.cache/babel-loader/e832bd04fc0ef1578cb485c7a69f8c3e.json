{"ast":null,"code":"import { cloneDeep } from \"lodash\";\nimport { randomlyChooseFiveShips } from \"./reducerUtils\";\nexport default function humanBoardReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"ComputerClickSquare\":\n      {\n        const value = state.board[action.x][action.y];\n\n        if (value === \"Ship\") {\n          state.board[action.x][action.y] = \"X\";\n          state.count++;\n        } else if (value === \"\") {\n          // TODO: There is a library called immutable for React. Try it.\n          const copy = cloneDeep(state.board);\n          copy[action.x][action.y] = \"✓\";\n          state.board = copy;\n        }\n\n        return { ...state\n        };\n      }\n\n    case \"RESET\":\n      {// const newBoard = initialState.board;\n        // state.board = newBoard;\n        // state.count = 0;\n        // return { ...state };\n        // return {\n        //   count: 0,\n        //   board: randomlyChooseFiveShips(initialBoard),\n        // };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/jingjing/NEU_Align_CS/jingjing-liao-project2 Redux Michael/src/reducers/HumanBoardReducer.js"],"names":["cloneDeep","randomlyChooseFiveShips","humanBoardReducer","state","initialState","action","type","value","board","x","y","count","copy"],"mappings":"AAAA,SAASA,SAAT,QAA0B,QAA1B;AACA,SAASC,uBAAT,QAAwC,gBAAxC;AAIA,eAAe,SAASC,iBAAT,GAAyD;AAAA,MAA9BC,KAA8B,uEAAtBC,YAAsB;AAAA,MAARC,MAAQ;;AACtE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,qBAAL;AAA4B;AAC1B,cAAMC,KAAK,GAAGJ,KAAK,CAACK,KAAN,CAAYH,MAAM,CAACI,CAAnB,EAAsBJ,MAAM,CAACK,CAA7B,CAAd;;AACA,YAAIH,KAAK,KAAK,MAAd,EAAsB;AACpBJ,UAAAA,KAAK,CAACK,KAAN,CAAYH,MAAM,CAACI,CAAnB,EAAsBJ,MAAM,CAACK,CAA7B,IAAkC,GAAlC;AACAP,UAAAA,KAAK,CAACQ,KAAN;AACD,SAHD,MAGO,IAAIJ,KAAK,KAAK,EAAd,EAAkB;AACvB;AACA,gBAAMK,IAAI,GAAGZ,SAAS,CAACG,KAAK,CAACK,KAAP,CAAtB;AACAI,UAAAA,IAAI,CAACP,MAAM,CAACI,CAAR,CAAJ,CAAeJ,MAAM,CAACK,CAAtB,IAA2B,GAA3B;AACAP,UAAAA,KAAK,CAACK,KAAN,GAAcI,IAAd;AACD;;AACD,eAAO,EAAE,GAAGT;AAAL,SAAP;AACD;;AACD,SAAK,OAAL;AAAc,OACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AACD;AACE,aAAOA,KAAP;AAzBJ;AA2BD","sourcesContent":["import { cloneDeep } from \"lodash\";\nimport { randomlyChooseFiveShips } from \"./reducerUtils\";\n\n\n\nexport default function humanBoardReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"ComputerClickSquare\": {\n      const value = state.board[action.x][action.y];\n      if (value === \"Ship\") {\n        state.board[action.x][action.y] = \"X\";\n        state.count++;\n      } else if (value === \"\") {\n        // TODO: There is a library called immutable for React. Try it.\n        const copy = cloneDeep(state.board);\n        copy[action.x][action.y] = \"✓\";\n        state.board = copy;\n      }\n      return { ...state };\n    }\n    case \"RESET\": {\n      // const newBoard = initialState.board;\n      // state.board = newBoard;\n      // state.count = 0;\n      // return { ...state };\n      // return {\n      //   count: 0,\n      //   board: randomlyChooseFiveShips(initialBoard),\n      // };\n    }\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}