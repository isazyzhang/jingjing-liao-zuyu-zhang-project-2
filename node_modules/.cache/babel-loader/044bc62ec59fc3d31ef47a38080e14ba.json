{"ast":null,"code":"import { cloneDeep } from \"lodash\";\nimport { randomlyChooseFiveShips } from \"./reducerUtils\";\nconst initialBoard = [[\"\", \"\", \"\"], [\"\", \"\", \"\"], [\"\", \"\", \"\"]];\nconst initialState = {\n  count: 0,\n  board: randomlyChooseFiveShips(initialBoard)\n};\nexport default function humanBoardReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"HumanClickSquare\":\n      {\n        setTimeout(() => {\n          const x = Math.floor(Math.random() * state.board.length);\n          const y = Math.floor(Math.random() * state.board[0].length);\n        });\n      }\n\n    case \"\":\n      {\n        setTimeout(() => {\n          turnDispatch({\n            type: \"ComputerClickSquare\",\n            x: Math.floor(Math.random() * humanBoardState.length),\n            y: Math.floor(Math.random() * humanBoardState[0].length)\n          });\n        }, 2000);\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/jingjing/NEU_Align_CS/jingjing-liao-project2 Redux Michael/src/reducers/HumanBoardReducer.js"],"names":["cloneDeep","randomlyChooseFiveShips","initialBoard","initialState","count","board","humanBoardReducer","state","action","type","setTimeout","x","Math","floor","random","length","y","turnDispatch","humanBoardState"],"mappings":"AAAA,SAASA,SAAT,QAA0B,QAA1B;AACA,SAASC,uBAAT,QAAwC,gBAAxC;AAEA,MAAMC,YAAY,GAAG,CACnB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CADmB,EAEnB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAFmB,EAGnB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAHmB,CAArB;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,CADY;AAEnBC,EAAAA,KAAK,EAAEJ,uBAAuB,CAACC,YAAD;AAFX,CAArB;AAKA,eAAe,SAASI,iBAAT,GAAyD;AAAA,MAA9BC,KAA8B,uEAAtBJ,YAAsB;AAAA,MAARK,MAAQ;;AACtE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,kBAAL;AAAyB;AACvBC,QAAAA,UAAU,CAAC,MAAM;AACf,gBAAMC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBP,KAAK,CAACF,KAAN,CAAYU,MAAvC,CAAV;AACA,gBAAMC,CAAC,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBP,KAAK,CAACF,KAAN,CAAY,CAAZ,EAAeU,MAA1C,CAAV;AACD,SAHS,CAAV;AAID;;AACD,SAAK,EAAL;AAAS;AACPL,QAAAA,UAAU,CAAC,MAAM;AACfO,UAAAA,YAAY,CAAC;AACXR,YAAAA,IAAI,EAAE,qBADK;AAEXE,YAAAA,CAAC,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBI,eAAe,CAACH,MAA3C,CAFQ;AAGXC,YAAAA,CAAC,EAAEJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBI,eAAe,CAAC,CAAD,CAAf,CAAmBH,MAA9C;AAHQ,WAAD,CAAZ;AAKD,SANS,EAMP,IANO,CAAV;AAOD;;AACD;AACE,aAAOR,KAAP;AAjBJ;AAmBD","sourcesContent":["import { cloneDeep } from \"lodash\";\nimport { randomlyChooseFiveShips } from \"./reducerUtils\";\n\nconst initialBoard = [\n  [\"\", \"\", \"\"],\n  [\"\", \"\", \"\"],\n  [\"\", \"\", \"\"],\n];\n\nconst initialState = {\n  count: 0,\n  board: randomlyChooseFiveShips(initialBoard),\n};\n\nexport default function humanBoardReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"HumanClickSquare\": {\n      setTimeout(() => {\n        const x = Math.floor(Math.random() * state.board.length);\n        const y = Math.floor(Math.random() * state.board[0].length);\n      });\n    }\n    case \"\": {\n      setTimeout(() => {\n        turnDispatch({\n          type: \"ComputerClickSquare\",\n          x: Math.floor(Math.random() * humanBoardState.length),\n          y: Math.floor(Math.random() * humanBoardState[0].length),\n        });\n      }, 2000);\n    }\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}