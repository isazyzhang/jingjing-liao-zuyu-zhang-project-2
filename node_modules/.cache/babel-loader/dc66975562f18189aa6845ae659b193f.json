{"ast":null,"code":"var _jsxFileName = \"/Users/jingjing/NEU_Align_CS/CS5610 Web Dev/Jingjing-Liao-project2/jingjing-liao-project2/src/Board.jsx\",\n    _s = $RefreshSig$();\n\nimport Square from \"./ComputerSquare\";\nimport \"./Board.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst totalShip = 5;\nlet playerTurn = \"Human's turn\";\nexport default function Board() {\n  _s();\n\n  let computerBoard = randomlyChooseFiveShips([[\"\", \"\", \"\"], [\"\", \"\", \"\"], [\"\", \"\", \"\"]]);\n  const [computerBoardState, setComputerBoard] = useState(computerBoard);\n  const computerBoardComponent = [];\n  let humanCount = 0;\n\n  for (let i = 0; i < computerBoardState.length; i++) {\n    let row = computerBoardState[i];\n\n    for (let j = 0; j < row.length; j++) {\n      boardComponent.push( /*#__PURE__*/_jsxDEV(Square, {\n        symbol: computerBoardState[i][j],\n        onClick: setBoard,\n        boardState: computerBoardState,\n        x: i,\n        y: j\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this));\n\n      if (boardState[i][j] === \"X\") {\n        humanCount++;\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"count\",\n      children: [\"Human: \", humanCount, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"computerCount\",\n        children: \"Computer: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"turn\",\n      children: playerTurn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"board\",\n      children: boardComponent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Board, \"YronJPeVMjXhPsxchli3xZDGdt8=\");\n\n_c = Board;\n\nfunction randomlyChooseFiveShips(board) {\n  let newArray = [];\n\n  for (let i = 0; i < board.length; i++) {\n    newArray.push(i);\n  }\n\n  let shipCount = 0;\n\n  while (shipCount != totalShip) {\n    let rowPos = newArray[Math.floor(Math.random() * newArray.length)];\n    let colPos = newArray[Math.floor(Math.random() * newArray.length)];\n\n    if (board[rowPos][colPos] === \"\") {\n      board[rowPos][colPos] = \"Ship\";\n      shipCount += 1;\n    }\n  }\n\n  return board;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/jingjing/NEU_Align_CS/CS5610 Web Dev/Jingjing-Liao-project2/jingjing-liao-project2/src/Board.jsx"],"names":["Square","useState","totalShip","playerTurn","Board","computerBoard","randomlyChooseFiveShips","computerBoardState","setComputerBoard","computerBoardComponent","humanCount","i","length","row","j","boardComponent","push","setBoard","boardState","board","newArray","shipCount","rowPos","Math","floor","random","colPos"],"mappings":"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","sourcesContent":["import Square from \"./ComputerSquare\";\nimport \"./Board.css\";\nimport { useState } from \"react\";\n\nconst totalShip = 5;\nlet playerTurn = \"Human's turn\";\n\nexport default function Board() {\n  let computerBoard = randomlyChooseFiveShips([\n    [\"\", \"\", \"\"],\n    [\"\", \"\", \"\"],\n    [\"\", \"\", \"\"],\n  ]);\n  const [computerBoardState, setComputerBoard] = useState(computerBoard);\n\n  const computerBoardComponent = [];\n  let humanCount = 0;\n\n  for (let i = 0; i < computerBoardState.length; i++) {\n    let row = computerBoardState[i];\n    for (let j = 0; j < row.length; j++) {\n      boardComponent.push(\n        <Square\n          symbol={computerBoardState[i][j]}\n          onClick={setBoard}\n          boardState={computerBoardState}\n          x={i}\n          y={j}\n        />\n      );\n      if (boardState[i][j] === \"X\") {\n        humanCount++;\n      }\n    }\n  }\n\n  return (\n    <div>\n      {/* <div>\n        <span id=\"count\">Human: {humanCount}</span>\n        <span id=\"count\">Computer: {}</span>\n      </div> */}\n      <div class=\"count\">\n        Human: {humanCount} <span class=\"computerCount\">Computer: {}</span>\n      </div>\n      <div class=\"turn\">{playerTurn}</div>\n      <div id=\"board\">{boardComponent}</div>\n    </div>\n  );\n}\n\nfunction randomlyChooseFiveShips(board) {\n  let newArray = [];\n  for (let i = 0; i < board.length; i++) {\n    newArray.push(i);\n  }\n\n  let shipCount = 0;\n  while (shipCount != totalShip) {\n    let rowPos = newArray[Math.floor(Math.random() * newArray.length)];\n    let colPos = newArray[Math.floor(Math.random() * newArray.length)];\n    if (board[rowPos][colPos] === \"\") {\n      board[rowPos][colPos] = \"Ship\";\n      shipCount += 1;\n    }\n  }\n  return board;\n}\n"]},"metadata":{},"sourceType":"module"}