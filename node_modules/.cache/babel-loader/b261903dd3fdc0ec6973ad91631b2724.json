{"ast":null,"code":"var _jsxFileName = \"/Users/jingjing/NEU_Align_CS/CS5610 Web Dev/Jingjing-Liao-project2/jingjing-liao-project2 Redux copy/src/Board.jsx\",\n    _s = $RefreshSig$();\n\nimport ComputerSquare from \"./ComputerSquare\";\nimport HumanSquare from \"./HumanSquare\";\nimport \"./Board.css\";\nimport { useSelector } from \"react-redux\";\nimport ResetButton from \"./ResetButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Board() {\n  _s();\n\n  const computerBoardState = useSelector(state => state.game.gameBoard);\n  const clickCount = useSelector(state => state.game.count);\n  const huamBoardState = useSelector(state => state.computerGame.gameBoard);\n  const computerClickCount = useSelector(state => state.computerGame.count);\n  const computerBoardComponent = [];\n  const humanBoardComponent = [];\n  const totalShips = 5;\n  let winner = \"\";\n  let turn = 0;\n\n  for (let i = 0; i < computerBoardState.length; i++) {\n    let row = computerBoardState[i];\n\n    for (let j = 0; j < row.length; j++) {\n      computerBoardComponent.push( /*#__PURE__*/_jsxDEV(ComputerSquare, {\n        symbol: computerBoardState[i][j],\n        x: i,\n        y: j\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this));\n    }\n  }\n\n  for (let i = 0; i < huamBoardState.length; i++) {\n    let row = huamBoardState[i];\n\n    for (let j = 0; j < row.length; j++) {\n      humanBoardComponent.push( /*#__PURE__*/_jsxDEV(HumanSquare, {\n        symbol: huamBoardState[i][j],\n        x: i,\n        y: j\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this));\n    }\n  } //   if (clickCount === totalShips) {\n  //     winner = \"Game Over! You Won!\";\n  //   }\n\n\n  while (clickCount != totalShips && computerClickCount != totalShips) {\n    if (turn === 0) {\n      turn = 1;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"count\",\n          children: [\"Score: \", clickCount, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"count\",\n          children: \"Human's Turn \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"winner\",\n          children: [winner, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"board\",\n          children: computerBoardComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResetButton, {\n          text: \"Reset The Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this);\n    } else {\n      turn = 0;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"count\",\n          children: [\"Score: \", computerClickCount, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"count\",\n          children: \"Computer's Turn \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"winner\",\n          children: [winner, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"board\",\n          children: humanBoardComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResetButton, {\n          text: \"Reset The Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this);\n    }\n  }\n}\n\n_s(Board, \"Ihz+31hxxlt6IM9I7UIqwVUK/cY=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/jingjing/NEU_Align_CS/CS5610 Web Dev/Jingjing-Liao-project2/jingjing-liao-project2 Redux copy/src/Board.jsx"],"names":["ComputerSquare","HumanSquare","useSelector","ResetButton","Board","computerBoardState","state","game","gameBoard","clickCount","count","huamBoardState","computerGame","computerClickCount","computerBoardComponent","humanBoardComponent","totalShips","winner","turn","i","length","row","j","push"],"mappings":"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","sourcesContent":["import ComputerSquare from \"./ComputerSquare\";\nimport HumanSquare from \"./HumanSquare\";\nimport \"./Board.css\";\nimport { useSelector } from \"react-redux\";\nimport ResetButton from \"./ResetButton\";\n\nexport default function Board() {\n  const computerBoardState = useSelector((state) => state.game.gameBoard);\n  const clickCount = useSelector((state) => state.game.count);\n\n  const huamBoardState = useSelector((state) => state.computerGame.gameBoard);\n  const computerClickCount = useSelector((state) => state.computerGame.count);\n\n  \n  const computerBoardComponent = [];\n  const humanBoardComponent = [];\n  const totalShips = 5;\n  let winner = \"\";\n  let turn = 0;\n\n  for (let i = 0; i < computerBoardState.length; i++) {\n    let row = computerBoardState[i];\n    for (let j = 0; j < row.length; j++) {\n      computerBoardComponent.push(\n        <ComputerSquare symbol={computerBoardState[i][j]} x={i} y={j} />\n      );\n    }\n  }\n\n  for (let i = 0; i < huamBoardState.length; i++) {\n    let row = huamBoardState[i];\n    for (let j = 0; j < row.length; j++) {\n      humanBoardComponent.push(\n        <HumanSquare symbol={huamBoardState[i][j]} x={i} y={j} />\n      );\n    }\n  }\n\n  //   if (clickCount === totalShips) {\n  //     winner = \"Game Over! You Won!\";\n  //   }\n\n  while (clickCount != totalShips && computerClickCount != totalShips) {\n    if (turn === 0) {\n      turn = 1;\n      return (\n        <div>\n          <div class=\"count\">Score: {clickCount} </div>\n          <div class=\"count\">Human's Turn </div>\n          <div class=\"winner\">{winner} </div>\n          <div id=\"board\">{computerBoardComponent}</div>\n          <ResetButton text=\"Reset The Game\" />\n        </div>\n      );\n    } else {\n      turn = 0;\n      return (\n        <div>\n          <div class=\"count\">Score: {computerClickCount} </div>\n          <div class=\"count\">Computer's Turn </div>\n          <div class=\"winner\">{winner} </div>\n          <div id=\"board\">{humanBoardComponent}</div>\n          <ResetButton text=\"Reset The Game\" />\n        </div>\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}