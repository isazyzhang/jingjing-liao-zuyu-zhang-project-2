{"ast":null,"code":"var _jsxFileName = \"/Users/jingjing/NEU_Align_CS/CS5610 Web Dev/Jingjing-Liao-project2/jingjing-liao-project2 Redux/src/FreePlayBoard.jsx\",\n    _s = $RefreshSig$();\n\nimport ComputerSquare from \"./ComputerSquare\";\nimport HumanSquare from \"./HumanSquare\";\nimport \"./Board.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst totalShip = 5;\nlet computerCount = 0;\nlet humanCount = 0;\nlet turn = 0;\nlet gameOver = \"\";\nlet computerBoard = randomlyChooseFiveShips([[\"\", \"\", \"\"], [\"\", \"\", \"\"], [\"\", \"\", \"\"]]);\nexport default function Board() {\n  _s();\n\n  const [computerBoardState, setComputerBoard] = useState(computerBoard);\n  const computerBoardComponent = [];\n\n  for (let i = 0; i < computerBoardState.length; i++) {\n    let row = computerBoardState[i];\n\n    for (let j = 0; j < row.length; j++) {\n      computerBoardComponent.push( /*#__PURE__*/_jsxDEV(ComputerSquare, {\n        symbol: computerBoardState[i][j],\n        onClick: setComputerBoard,\n        boardState: computerBoardState,\n        x: i,\n        y: j\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this));\n\n      if (computerBoardState[i][j] === \"X\") {\n        humanCount++;\n      }\n\n      if (humanCount == totalShip) {\n        break;\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"count\",\n      children: [\"Human: \", humanCount, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n} // function randomlyChooseFiveShips(board) {\n//   let newArray = [];\n//   for (let i = 0; i < board.length; i++) {\n//     newArray.push(i);\n//   }\n//   let shipCount = 0;\n//   while (shipCount !== totalShip) {\n//     let rowPos = newArray[Math.floor(Math.random() * newArray.length)];\n//     let colPos = newArray[Math.floor(Math.random() * newArray.length)];\n//     if (board[rowPos][colPos] === \"\") {\n//       board[rowPos][colPos] = \"Ship\";\n//       shipCount += 1;\n//     }\n//   }\n//   return board;\n// }\n\n_s(Board, \"YronJPeVMjXhPsxchli3xZDGdt8=\");\n\n_c = Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/jingjing/NEU_Align_CS/CS5610 Web Dev/Jingjing-Liao-project2/jingjing-liao-project2 Redux/src/FreePlayBoard.jsx"],"names":["ComputerSquare","HumanSquare","useState","totalShip","computerCount","humanCount","turn","gameOver","computerBoard","randomlyChooseFiveShips","Board","computerBoardState","setComputerBoard","computerBoardComponent","i","length","row","j","push"],"mappings":";;;AAAA,OAAOA,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,aAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,SAAS,GAAG,CAAlB;AACA,IAAIC,aAAa,GAAG,CAApB;AACA,IAAIC,UAAU,GAAG,CAAjB;AACA,IAAIC,IAAI,GAAG,CAAX;AACA,IAAIC,QAAQ,GAAG,EAAf;AAEA,IAAIC,aAAa,GAAGC,uBAAuB,CAAC,CAC1C,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAD0C,EAE1C,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAF0C,EAG1C,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAH0C,CAAD,CAA3C;AAMA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B,QAAM,CAACC,kBAAD,EAAqBC,gBAArB,IAAyCV,QAAQ,CAACM,aAAD,CAAvD;AACA,QAAMK,sBAAsB,GAAG,EAA/B;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,kBAAkB,CAACI,MAAvC,EAA+CD,CAAC,EAAhD,EAAoD;AAClD,QAAIE,GAAG,GAAGL,kBAAkB,CAACG,CAAD,CAA5B;;AACA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAAG,CAACD,MAAxB,EAAgCE,CAAC,EAAjC,EAAqC;AACnCJ,MAAAA,sBAAsB,CAACK,IAAvB,eACE,QAAC,cAAD;AACE,QAAA,MAAM,EAAEP,kBAAkB,CAACG,CAAD,CAAlB,CAAsBG,CAAtB,CADV;AAEE,QAAA,OAAO,EAAEL,gBAFX;AAGE,QAAA,UAAU,EAAED,kBAHd;AAIE,QAAA,CAAC,EAAEG,CAJL;AAKE,QAAA,CAAC,EAAEG;AALL;AAAA;AAAA;AAAA;AAAA,cADF;;AASA,UAAIN,kBAAkB,CAACG,CAAD,CAAlB,CAAsBG,CAAtB,MAA6B,GAAjC,EAAsC;AACpCZ,QAAAA,UAAU;AACX;;AACD,UAAIA,UAAU,IAAIF,SAAlB,EAA6B;AAC3B;AACD;AACF;AACF;;AAED,sBACE;AAAA,2BACE;AAAK,MAAA,KAAK,EAAC,OAAX;AAAA,4BAA2BE,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,C,CAED;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GAhDwBK,K;;KAAAA,K","sourcesContent":["import ComputerSquare from \"./ComputerSquare\";\nimport HumanSquare from \"./HumanSquare\";\nimport \"./Board.css\";\nimport { useState } from \"react\";\n\nconst totalShip = 5;\nlet computerCount = 0;\nlet humanCount = 0;\nlet turn = 0;\nlet gameOver = \"\";\n\nlet computerBoard = randomlyChooseFiveShips([\n  [\"\", \"\", \"\"],\n  [\"\", \"\", \"\"],\n  [\"\", \"\", \"\"],\n]);\n\nexport default function Board() {\n  const [computerBoardState, setComputerBoard] = useState(computerBoard);\n  const computerBoardComponent = [];\n\n  for (let i = 0; i < computerBoardState.length; i++) {\n    let row = computerBoardState[i];\n    for (let j = 0; j < row.length; j++) {\n      computerBoardComponent.push(\n        <ComputerSquare\n          symbol={computerBoardState[i][j]}\n          onClick={setComputerBoard}\n          boardState={computerBoardState}\n          x={i}\n          y={j}\n        />\n      );\n      if (computerBoardState[i][j] === \"X\") {\n        humanCount++;\n      }\n      if (humanCount == totalShip) {\n        break;\n      }\n    }\n  }\n\n  return (\n    <div>\n      <div class=\"count\">Human: {humanCount} </div>\n    </div>\n  );\n}\n\n// function randomlyChooseFiveShips(board) {\n//   let newArray = [];\n//   for (let i = 0; i < board.length; i++) {\n//     newArray.push(i);\n//   }\n\n//   let shipCount = 0;\n//   while (shipCount !== totalShip) {\n//     let rowPos = newArray[Math.floor(Math.random() * newArray.length)];\n//     let colPos = newArray[Math.floor(Math.random() * newArray.length)];\n//     if (board[rowPos][colPos] === \"\") {\n//       board[rowPos][colPos] = \"Ship\";\n//       shipCount += 1;\n//     }\n//   }\n//   return board;\n// }\n"]},"metadata":{},"sourceType":"module"}