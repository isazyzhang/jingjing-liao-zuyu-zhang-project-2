{"ast":null,"code":"var _jsxFileName = \"/Users/jingjing/NEU_Align_CS/jingjing-liao-project2 Redux Michael/src/HumanBoard.jsx\",\n    _s = $RefreshSig$();\n\nimport HumanSquare from \"./HumanSquare\";\nimport \"./Game.css\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\"; // This is the hack to skip a duplicate dispatch because triggered humanBoardState change.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet computerClickOnce = false;\nexport default function HumanBoard() {\n  _s();\n\n  const humanBoardState = useSelector(state => state.humanBoard.board);\n  const humanBoardComponent = [];\n\n  for (let i = 0; i < humanBoardState.length; i++) {\n    let row = humanBoardState[i];\n\n    for (let j = 0; j < row.length; j++) {\n      humanBoardComponent.push( /*#__PURE__*/_jsxDEV(HumanSquare, {\n        symbol: humanBoardState[i][j],\n        x: i,\n        y: j\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this));\n    }\n  }\n\n  const dispatch = useDispatch();\n  setTimeout(() => {\n    if (computerClickOnce) {\n      computerClickOnce = false;\n      return;\n    }\n\n    dispatch({\n      type: \"ComputerClickSquare\",\n      x: Math.floor(Math.random() * humanBoardState.length),\n      y: Math.floor(Math.random() * humanBoardState[0].length)\n    });\n    computerClickOnce = true;\n  }, 2000);\n  setTimeout(() => {\n    dispatch({\n      type: \"ComputeChangeTurn\"\n    });\n  }, 4000);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"board\",\n    children: humanBoardComponent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n}\n\n_s(HumanBoard, \"qUu9n0qdJm+jg+t6zv5/sdvN0r8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = HumanBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"HumanBoard\");","map":{"version":3,"sources":["/Users/jingjing/NEU_Align_CS/jingjing-liao-project2 Redux Michael/src/HumanBoard.jsx"],"names":["HumanSquare","useSelector","useDispatch","computerClickOnce","HumanBoard","humanBoardState","state","humanBoard","board","humanBoardComponent","i","length","row","j","push","dispatch","setTimeout","type","x","Math","floor","random","y"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAO,YAAP;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CAEA;;;AACA,IAAIC,iBAAiB,GAAG,KAAxB;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACnC,QAAMC,eAAe,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,UAAN,CAAiBC,KAA7B,CAAnC;AAEA,QAAMC,mBAAmB,GAAG,EAA5B;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,eAAe,CAACM,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;AAC/C,QAAIE,GAAG,GAAGP,eAAe,CAACK,CAAD,CAAzB;;AACA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAAG,CAACD,MAAxB,EAAgCE,CAAC,EAAjC,EAAqC;AACnCJ,MAAAA,mBAAmB,CAACK,IAApB,eACE,QAAC,WAAD;AAAa,QAAA,MAAM,EAAET,eAAe,CAACK,CAAD,CAAf,CAAmBG,CAAnB,CAArB;AAA4C,QAAA,CAAC,EAAEH,CAA/C;AAAkD,QAAA,CAAC,EAAEG;AAArD;AAAA;AAAA;AAAA;AAAA,cADF;AAGD;AACF;;AAED,QAAME,QAAQ,GAAGb,WAAW,EAA5B;AACAc,EAAAA,UAAU,CAAC,MAAM;AACf,QAAIb,iBAAJ,EAAuB;AACrBA,MAAAA,iBAAiB,GAAG,KAApB;AACA;AACD;;AACDY,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE,qBADC;AAEPC,MAAAA,CAAC,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBhB,eAAe,CAACM,MAA3C,CAFI;AAGPW,MAAAA,CAAC,EAAEH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBhB,eAAe,CAAC,CAAD,CAAf,CAAmBM,MAA9C;AAHI,KAAD,CAAR;AAKAR,IAAAA,iBAAiB,GAAG,IAApB;AACD,GAXS,EAWP,IAXO,CAAV;AAYAa,EAAAA,UAAU,CAAC,MAAM;AACfD,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACD,GAFS,EAEP,IAFO,CAAV;AAGA,sBAAO;AAAK,IAAA,KAAK,EAAC,OAAX;AAAA,cAAoBR;AAApB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GA9BuBL,U;UACEH,W,EAYPC,W;;;KAbKE,U","sourcesContent":["import HumanSquare from \"./HumanSquare\";\nimport \"./Game.css\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\n\n// This is the hack to skip a duplicate dispatch because triggered humanBoardState change.\nlet computerClickOnce = false;\n\nexport default function HumanBoard() {\n  const humanBoardState = useSelector((state) => state.humanBoard.board);\n\n  const humanBoardComponent = [];\n  for (let i = 0; i < humanBoardState.length; i++) {\n    let row = humanBoardState[i];\n    for (let j = 0; j < row.length; j++) {\n      humanBoardComponent.push(\n        <HumanSquare symbol={humanBoardState[i][j]} x={i} y={j} />\n      );\n    }\n  }\n\n  const dispatch = useDispatch();\n  setTimeout(() => {\n    if (computerClickOnce) {\n      computerClickOnce = false;\n      return;\n    }\n    dispatch({\n      type: \"ComputerClickSquare\",\n      x: Math.floor(Math.random() * humanBoardState.length),\n      y: Math.floor(Math.random() * humanBoardState[0].length),\n    });\n    computerClickOnce = true;\n  }, 2000);\n  setTimeout(() => {\n    dispatch({ type: \"ComputeChangeTurn\" });\n  }, 4000);\n  return <div class=\"board\">{humanBoardComponent}</div>;\n}\n"]},"metadata":{},"sourceType":"module"}