{"ast":null,"code":"import { cloneDeep } from \"lodash\";\nimport { randomlyChooseFiveShips } from \"./reducerUtils\";\nexport default function computerBoardReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  return function () {\n    const initialBoard = [[\"\", \"\", \"\"], [\"\", \"\", \"\"], [\"\", \"\", \"\"]];\n    const initState = {\n      count: 0,\n      board: randomlyChooseFiveShips(initialBoard)\n    };\n\n    switch (action.type) {\n      case \"HumanClickSquare\":\n        {\n          const value = state.board[action.x][action.y];\n\n          if (value === \"Ship\") {\n            state.board[action.x][action.y] = \"X\";\n            state.count++;\n          } else if (value === \"\") {\n            const copy = cloneDeep(state.board);\n            copy[action.x][action.y] = \"⚫\";\n            state.board = copy;\n          }\n\n          return { ...state\n          };\n        }\n\n      case \"RESET\":\n        {\n          // const newState = {\n          //   count: 0,\n          //   board: randomlyChooseFiveShips(initialBoard),\n          // };\n          // state = newState;\n          // return { ...state };\n          state.board = initState.board;\n          state.count = 0;\n          return { ...state\n          }; // state.board = [\n          //   [\"\", \"\", \"\"],\n          //   [\"\", \"\", \"\"],\n          //   [\"\", \"\", \"\"],\n          // ];\n          // state.count = 0;\n          // return { ...state };\n        }\n\n      default:\n        return state;\n    }\n  }();\n}","map":{"version":3,"sources":["/Users/jingjing/NEU_Align_CS/jingjing-liao-project2 Redux Michael/src/reducers/ComputerBoardReducer.js"],"names":["cloneDeep","randomlyChooseFiveShips","computerBoardReducer","state","initState","action","initialBoard","count","board","type","value","x","y","copy"],"mappings":"AAAA,SAASA,SAAT,QAA0B,QAA1B;AACA,SAASC,uBAAT,QAAwC,gBAAxC;AAEA,eAAe,SAASC,oBAAT;AAAA,MAA8BC,KAA9B,uEAAsCC,SAAtC;AAAA,MAAiDC,MAAjD;AAAA,qBAAyD;AACtE,UAAMC,YAAY,GAAG,CACnB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CADmB,EAEnB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAFmB,EAGnB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAHmB,CAArB;AAMA,UAAMF,SAAS,GAAG;AAChBG,MAAAA,KAAK,EAAE,CADS;AAEhBC,MAAAA,KAAK,EAAEP,uBAAuB,CAACK,YAAD;AAFd,KAAlB;;AAKA,YAAQD,MAAM,CAACI,IAAf;AACE,WAAK,kBAAL;AAAyB;AACvB,gBAAMC,KAAK,GAAGP,KAAK,CAACK,KAAN,CAAYH,MAAM,CAACM,CAAnB,EAAsBN,MAAM,CAACO,CAA7B,CAAd;;AACA,cAAIF,KAAK,KAAK,MAAd,EAAsB;AACpBP,YAAAA,KAAK,CAACK,KAAN,CAAYH,MAAM,CAACM,CAAnB,EAAsBN,MAAM,CAACO,CAA7B,IAAkC,GAAlC;AACAT,YAAAA,KAAK,CAACI,KAAN;AACD,WAHD,MAGO,IAAIG,KAAK,KAAK,EAAd,EAAkB;AACvB,kBAAMG,IAAI,GAAGb,SAAS,CAACG,KAAK,CAACK,KAAP,CAAtB;AACAK,YAAAA,IAAI,CAACR,MAAM,CAACM,CAAR,CAAJ,CAAeN,MAAM,CAACO,CAAtB,IAA2B,GAA3B;AACAT,YAAAA,KAAK,CAACK,KAAN,GAAcK,IAAd;AACD;;AACD,iBAAO,EAAE,GAAGV;AAAL,WAAP;AACD;;AACD,WAAK,OAAL;AAAc;AACZ;AACA;AACA;AACA;AACA;AACA;AACAA,UAAAA,KAAK,CAACK,KAAN,GAAcJ,SAAS,CAACI,KAAxB;AACAL,UAAAA,KAAK,CAACI,KAAN,GAAc,CAAd;AACA,iBAAO,EAAE,GAAGJ;AAAL,WAAP,CATY,CAWZ;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AACD;AACE,eAAOA,KAAP;AAjCJ;AAmCD,GA/Cc;AAAA","sourcesContent":["import { cloneDeep } from \"lodash\";\nimport { randomlyChooseFiveShips } from \"./reducerUtils\";\n\nexport default function computerBoardReducer(state = initState, action) {\n  const initialBoard = [\n    [\"\", \"\", \"\"],\n    [\"\", \"\", \"\"],\n    [\"\", \"\", \"\"],\n  ];\n\n  const initState = {\n    count: 0,\n    board: randomlyChooseFiveShips(initialBoard),\n  };\n\n  switch (action.type) {\n    case \"HumanClickSquare\": {\n      const value = state.board[action.x][action.y];\n      if (value === \"Ship\") {\n        state.board[action.x][action.y] = \"X\";\n        state.count++;\n      } else if (value === \"\") {\n        const copy = cloneDeep(state.board);\n        copy[action.x][action.y] = \"⚫\";\n        state.board = copy;\n      }\n      return { ...state };\n    }\n    case \"RESET\": {\n      // const newState = {\n      //   count: 0,\n      //   board: randomlyChooseFiveShips(initialBoard),\n      // };\n      // state = newState;\n      // return { ...state };\n      state.board = initState.board;\n      state.count = 0;\n      return { ...state };\n\n      // state.board = [\n      //   [\"\", \"\", \"\"],\n      //   [\"\", \"\", \"\"],\n      //   [\"\", \"\", \"\"],\n      // ];\n      // state.count = 0;\n      // return { ...state };\n    }\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}